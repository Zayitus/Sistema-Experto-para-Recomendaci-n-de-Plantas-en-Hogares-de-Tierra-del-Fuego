[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plantadvisor-tdf"
version = "1.0.0"
description = "Sistema Experto para Recomendación de Plantas en Tierra del Fuego"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Gaston Schvartz", email = "gaston.schvartz@example.com"},
]
maintainers = [
    {name = "Gaston Schvartz", email = "gaston.schvartz@example.com"},
]
keywords = [
    "expert-system",
    "plantas",
    "tierra-del-fuego",
    "recommendation-system",
    "flask",
    "ai"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Home and Garden",
]
dependencies = [
    "flask>=2.3.3",
    "werkzeug>=2.3.7",
    "jinja2>=3.1.2",
    "markupsafe>=2.1.3",
    "itsdangerous>=2.1.2",
    "click>=8.1.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "isort>=5.12.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "coverage>=7.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego"
Repository = "https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego"
Documentation = "https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego/blob/main/README.md"
Issues = "https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego/issues"

[project.scripts]
plantadvisor = "src.app:main"
plantadvisor-dev = "scripts.start_dev:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["plant_advisor*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marca tests unitarios",
    "integration: marca tests de integración",
    "slow: marca tests que tardan mucho",
    "api: marca tests de API",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["plant_advisor"]
known_third_party = ["flask", "pytest"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false