[metadata]
name = plantadvisor-tdf
version = 1.0.0
author = Gaston Schvartz
author_email = gaston.schvartz@example.com
description = Sistema Experto para Recomendación de Plantas en Tierra del Fuego
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego
project_urls =
    Bug Tracker = https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego/issues
    Documentation = https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego/blob/main/README.md
    Source Code = https://github.com/Zayitus/Sistema-Experto-para-Recomendaci-n-de-Plantas-en-Hogares-de-Tierra-del-Fuego
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: End Users/Desktop
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Home and Garden

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.9
install_requires =
    flask>=2.3.3
    werkzeug>=2.3.7
    jinja2>=3.1.2
    markupsafe>=2.1.3
    itsdangerous>=2.1.2
    click>=8.1.7

[options.packages.find]
where = src

[options.extras_require]
dev =
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-flask>=1.2.0
    black>=23.7.0
    flake8>=6.0.0
    mypy>=1.5.0
    pre-commit>=3.3.0
    isort>=5.12.0
    safety>=2.3.0
    bandit>=1.7.0
test =
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-flask>=1.2.0
    coverage>=7.3.0
docs =
    sphinx>=7.1.0
    sphinx-rtd-theme>=1.3.0

[options.entry_points]
console_scripts =
    plantadvisor = src.app:main
    plantadvisor-dev = scripts.start_dev:main

# Configuración de flake8
[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist,
    .venv,
    venv,
    .eggs,
    *.egg,
    backup_old_structure
per-file-ignores =
    __init__.py:F401
    tests/*:S101,D
max-complexity = 10
docstring-convention = google

# Configuración de coverage
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */.venv/*
    */env/*
    */.env/*
    backup_old_structure/*
    scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

# Configuración de mypy
[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-tests.*]
disallow_untyped_defs = False

# Configuración de isort
[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = plant_advisor
known_third_party = flask,pytest
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True

# Configuración de bandit (seguridad)
[bandit]
exclude_dirs = tests,backup_old_structure
skips = B101,B601

# Configuración de pytest
[tool:pytest]
minversion = 6.0
addopts = 
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
    -ra
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    unit: marca tests unitarios
    integration: marca tests de integración  
    slow: marca tests que tardan mucho
    api: marca tests de API
    expert_system: marca tests del sistema experto
    knowledge: marca tests de base de conocimiento

# Configuración de setuptools_scm (versionado automático)
[setuptools_scm]
write_to = src/plant_advisor/_version.py
write_to_template = __version__ = "{version}"
tag_regex = ^(?P<prefix>v)?(?P<version>[^\+]+)(?P<suffix>.*)?$